[{"class":"pl.dworld.degree33.Talk","id":56,"description":"Cross Site Request Forgery (CSRF / XSRF) – jest to jedna z najczęstszych form ataku na strony internetowe. Metoda ta polega na nieświadomym wysłaniu przez użytkownika żądania do serwisu internetowego. Celem atakującego jest wykorzystanie uprawnień ofiary do wykonania operacji w jej imieniu. Osoba o wrogich zamiarach może spowodować wysłanie takiego żądania na wiele różnych sposobów.\r\nBrzmi skomplikowanie? Mnie to nie dotyczy?\r\nNa wykładzie pokaże na czym polega atak CSRF. Następnie pokaże jakie zabezpieczenia (i czy w ogóle) oferują popularne WEBowe frameworki Java.\r\n","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":43},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"(Polish) Bezpieczeństwo frameworków WEBowych Java na przykładzie ataku CSRF","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":62,"description":"Odkąd skończyliśmy studia, jesteśmy uczeni aby najpierw przygotować schemat danych, a następnie bazując na nim, stworzyć serwisy odpowiedzialne za logikę biznesową. Jakimś sposobem przekraczając próg pierwszej poważnej pracy zapominamy o zajęciach z Projektowania Obiektowego, gdzie najważniejszy był model. Czas spojrzeć wstecz i przypomnieć sobie o tych zasadach - oczywiście podrasowanych i zahartowanych w ogniu wysoce skalowalnych systemów.\r\nW ramach prezentacji przedstawię na początek klasyczne podejście oparte na anemicznych encjach i serwisach, a następnie rozbuduję je, wprowadzając słuchaczy kolejno w podstawy zagadnienia modelowania złożonych dziedzin biznesowych, podziału modelu według odpowiedzialności, definiowania zdarzeń biznesowych, a na końcu zmiany możliwości persystencji danych. Na każdym stopniu zaprezentuję jak zmienia się model, jakie jego cechy zostają wyeksponowane, oraz na jakich aktywnościach skupia się developer. Ostateczny efekt porównam do pewnych cech języków funkcyjnych.\r\nPoruszone zostaną gorące tematy Domain-Driven Design, Command Query Responsibility Segregation, oraz Event Sourcing'u z akcentem na efektywne połączenie tych technik, oraz wskazaniem jak zmienia się sposób myślenia developera podążającego za tymi wytycznymi.\r\nPoruszane tematy są niezwykle obszerne same w sobie, dlatego głównym celem prezentacji jest wskazanie słuchaczom pewnej ścieżki, którą mogą podążyć, oraz wzbudzenie ich ciekawości i chęci do dalszych poszukiwań.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":37},"speaker2":null,"timeslot":{"class":"Timeslot","id":6},"topic":"(Polish) Changing the mindset","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":77,"description":"Wielu z nas staje się liderami z dnia na dzień. Oto z ekspertów technicznych stajemy przed całkowicie odmiennym zadaniem – poprowadzenia zespołu często w niesprzyjających warunkach. Walczymy z klientem, zespołem, ze sobą, z project managerem i wszędzie pojawiają się kłody pod nogami. Jakże tęskno nam zaczyna być do czasów, kiedy tylko programowaliśmy, nie braliśmy pod uwagę kaprysów innych osób i wszystko było pod kontrolą. Tak, to prawda większość z nas nie jest przygotowana do tej drogi. Czasami „musimy”, czasami chcemy, czasami po prostu jakoś tak wyszło. Czasami się frustrujemy, nie wiedząc o co w tym wszystkim chodzi, a czasami cieszymy się jak dzieci, bo naszemu zespołowi się udaje. \r\nCi wszyscy, którzy tę drogę mają przed sobą, albo są w trakcie, albo ją przebyli i chcą przyjrzeć się z boku temu,  co się dzieje, kiedy stajemy się liderami technicznymi, będą mogli przeanalizować główne popełniane grzechy. Usłyszycie kilka historii z życia wziętych i kilka prostych lecz niełatwych heurystyk radzenia sobie z owymi grzechami.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":23},"speaker2":null,"timeslot":{"class":"Timeslot","id":7},"topic":"(Polish) Grzechy główne liderów technicznych","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":79,"description":"Który z trzech sposobów blokowania optymistyczne zastosować? Kiedy używać Lazy Loadingu a kiedy nie? Kiedy używać operacji kaskadowych a kiedy nie? Kiedy encja powinna zawierać w sobie referencję do innej encji a kiedy nie? W których miejscach w systemie stosować JPA a kiedy nie?\r\nKażdy ekspert odpowie na te pytania: \"\"to zależy\"\".\r\nPodczas prezentacji będę chciał pokazać Wam, że to wcale nie zależy. Jeżeli modelujesz obiektowo to odpowiedzi są jasne, klarowne i jednoznaczne.\r\nA oprócz tego wrócimy do podstaw (bo podstawy są najtrudniejsze i czas na nie przychodzi dopiero gdy osiągniesz poziom ekspercki) i zastanowimy się kiedy używać obiektów (i zasad CqS, SOLID, GRASP), kiedy struktur danych, kiedy procedur (a'la Turbo Pascal) a kiedy funkcji.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":22},"speaker2":null,"timeslot":{"class":"Timeslot","id":5},"topic":"(Polish) Mapowanie relacyjno-obiektowe prawdziwych obiektów - rzecz o obiektach, strukurach, procedurach i funkcjach","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":78,"description":"Dlaczego nasz kod na pierwszy rzut oka jest w sumie tak samo czytelny jak karty perforowane wkładane do komputerów Odra? Dlaczego wprowadzenie zmian w 10-letnim kodzie jest tak kosztowne - przecież wszystko powinno być tam już napisane...\r\nPodczas prezentacji zajmiemy się typowymi błędami:<ul class=\"list\"><li>zbytnie uogólnienie,<\/li><li>nieodpowiednie abstrakcje,<\/li><li>oderwanie od kontekstu,<\/li><\/ul>\r\noraz technikami, których możesz jeszcze nie znać:<ul class=\"list\"><li>modelowanie obiektów poprzez wyłanianie podmiotów, orzeczeń i dopełnień<\/li><li>modelowanie granic agregatów poprzez ochronę niezmienników<\/li><li>odwrócenie kolejności: od zachowań do obiektów<\/li><li>zestaw kilku wzorców i building blocks<\/li><\/ul>\r\npo to aby kod pisany w starej poczciwej Javie stał historyjką domenową i był czytelny niczym proza - również dla ekspertów domenowych, umożliwiając stosowanie DDD.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":22},"speaker2":null,"timeslot":{"class":"Timeslot","id":3},"topic":"(Polish) Nie koduj, pisz prozę - lingwistyczne techniki wychodzące daleko poza Clean Code","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":82,"description":"W prezentacji pokażę praktyczne metody poprawy czasu ładowania webaplikacji zarówno w wydaniu full site, jak i mobile. Omówię proces ładowania różnych zasobów w przeglądarce. Opiszę jak organizować zasoby na stronie, aby ładowały się szybciej. Opowiem o ograniczeniach protokołu HTTP jak i niższej warstwy TCP i jak sobie z nimi radzić. Pokażę z jakich narzędzi korzystać do weryfikacji wydajności webaplikacji po stronie przeglądarki.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":61},"speaker2":null,"timeslot":{"class":"Timeslot","id":12},"topic":"(Polish) Przyśpiesz czas ładowania swojej webaplikacji","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":110,"description":"Business project are intensive and tiring. Tight deadlines often make developers produce the infamous \"enterprise\" code, the quality of which is the least important factor. \"We are what we repeatedly do. Excellence, therefore, is not an act, but a habit\" Aristotle used to say. Deploying our skills, however, is almost mutually exclusive from mastering them… In this session we will cover 33 things you want to do better, quicker and simpler applying the best of Lombok, Guava, LambdaJ, Mockito, Spock, Byteman, Groovy, Gradle, Logback, Shell and others! Using some real-life examples we will have a peek at the code, analyze the flaw and propose a suitable solution. Not only will we learn how to code better, but also how to raise the bar on a daily basis!","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":85},"speaker2":null,"timeslot":{"class":"Timeslot","id":3},"topic":"33 things you want to do better","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":11,"description":"The Java EE 7 platform has four new components (WebSocket, JSON-P, batch, and concurrency), three that are significantly updated (JAX-RS, JMS, and EL), and several others that bring significant changes to the platform. As you can imagine, a lot of new functionality has been introduced in the platform. In this fast-paced session, you will learn about 50 new features introduced in the Java EE 7 platform. @ClientEndpoint, chunk-style batch processing, @FlowScoped, @AroundConstruct, @JMSDestinationDefinition, and @Transactional are some of features the presentation covers. It explains each feature with a code snippet and provides details on where and how you can use it in your applications.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":6},"speaker2":null,"timeslot":{"class":"Timeslot","id":6},"topic":"50 new features of Java EE 7","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":98,"description":"Today most of us work in Agile/Lean/Scrum/another-cool-word organization. Reasons to create our software this way are many: it is fun, it develops what is needed, it’s competitive and so on…\r\nEven if you don’t Scrum, you definitely do have some experience or, at least theoretical knowledge of it, and decided not to go this way.  Again, reasons may be many.\r\nThe ultimate goal of all software development  process is to create a piece of software that works as intended, is delivered on time with requested quality and within the budget. The way you do it is important, however of a second priority. The most important thing is to choose the way that fits most to your domain, knowledge, maturity and skills of people in the team, process and methodology. The real challenge, in fact, is to boost the team performance and bring it to the next level, despite the process you follow in the organization.\r\nHow?\r\nBuild a winning culture in your organization.\r\nCulture is what makes an organization ‘the’ organization and can have a great impact on its performance. It is the glue that binds an organization all together. A company may have the greatest product or service, but these can be easily copied. What cannot be is the culture: an unique mixture of company’s values and high performance behaviours which can be a lasting source of competitive advantage.\r\nIn my talk, I will tell you what an organization culture is and what are the behaviours that make it winning and high performance. ","priority":100,"room":{"class":"Room","id":7},"slidesLink":null,"speaker":{"class":"Speaker","id":72},"speaker2":null,"timeslot":{"class":"Timeslot","id":15},"topic":"A winning culture aka how to boost your agile team performance and bring it to the next level?","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":86,"description":"Changing focus from 'code delivery’ and ‘coding velocity', to planned measurable multiple-value delivery for multiple stakeholders.\r\nAgile, as taught and practiced today, is still focused on delivering code: the assumption being that code will deliver value. We believe this is a false idea. First, there are many other ways, than code, to deliver value to stakeholders, like data and motivation. Second code itself is no guarantee of value (for example a 'user time saving'). You have to target the value explicitly, and measure that the user really achieved it.\r\nThis talk will explain the difference between our current code focus, and shifting our focus to measurable values of stakeholders. If agile is to survive, then it must get a much better track record of value delivery, or it will be replaced with more useful methods.\r\nI dream of a different world where we measure ourselves on real stakeholder value delivered, not on code turndown charts, and velocity of code production","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":16},"speaker2":null,"timeslot":{"class":"Timeslot","id":3},"topic":"Agile Value Delivery","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":4,"description":"Learn how to build \"heroic\" apps with Angular and Dart. Use Dart's structured language and libraries with Angular's components and data binding. See real code and examples that blend the best of Dart and Angular. This session is for any developer that wants to build for the web with productive tools, familiar language, and modern web frameworks.","priority":10,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":3},"speaker2":null,"timeslot":{"class":"Timeslot","id":3},"topic":"Angular on Dart","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":89,"description":"The Internet of Things is coming, and open source developer tools and frameworks are starting to take shape to support it. At Eclipse there is a vibrant community working on the protocols, runtimes, frameworks and tools for building IoT applications in languages such as Lua, JavaScript and Java. In this talk, I will be discussing some of these projects such as Paho (MQTT client), Mosquitto (MQTT broker), Kura (Java+OSGi device gateway framework), Mihini (Lua device gateway framework), and others. In addition, I will be using the Orion web-based development tool to demonstrate how you can use your browser to develop IoT applications right on your favorite open hardware device, whether it be a Raspberry Pi, Beagle Bone, or Arduino. ","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":63},"speaker2":null,"timeslot":{"class":"Timeslot","id":17},"topic":"Browser-Based Development and the Internet of Things","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":102,"description":"Everything has gone Cloud but developers haven't yet accepted tools that are hosted there, why is that? What's missing in the available cloud-based tooling environments that makes a developer cringe?  What features are in Cloud based tools that developers might not be aware of that can improve their development process. Ken, the lead of the Open Source Orion project, will talk about how Web IDE creators and collaborators are trying to match expectations of desktop developers; what’s available now, and what we’re working on to make a Cloud IDE even more compelling.  The talk will cover several Cloud based tools and IDEs, their strengths and weaknesses and even some live development using Orion.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":78},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"Building a Cloud IDE you might not hate","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":100,"description":"The Eclipse is mainly known as the Integrated Development Environment. However it is also the Rich Client Platform that allows to build the advanced desktop applications. \r\nDuring the presentation we are going to review the most popular Rich Client Platforms, focusing on Eclipse. \r\nWe will also create the sample Eclipse RCP application, using the WindowBuilder plugin and the Nebula Widgets.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":74},"speaker2":{"class":"Speaker","id":75},"timeslot":{"class":"Timeslot","id":17},"topic":"Building Rich Desktop Application using Eclipse ","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":101,"description":"OpenStack is a global collaboration of developers and cloud computing technologists producing the ubiquitous open source cloud computing platform for public and private clouds. This presentation will walk you through details behind OpenStack architecture and will also provide hands-on experience in working with this exciting technology.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":76},"speaker2":{"class":"Speaker","id":77},"timeslot":{"class":"Timeslot","id":15},"topic":"Building your Cloud with OpenStack","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":84,"description":"As more and more people come to depend on their smartphones and the applications written for them, or for the mobile Web, more and more users discover that in the end, sometimes the best experience comes from the most primitive form of communication known to man: the voice. But historically, building an interactive voice (IVR) appliction has been the province of a small number of developers armed with specialized hardware and software. Now, thanks to services that offer \"voice in the cloud\", developers can offer a new user interface channel to their userbase without requiring a huge investment in technology or learning curve. In fact, using the Tropo service, in this presentation we will do exactly that: build a voice (and SMS) channel that anybody in the room can call. Just for fun.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":9},"speaker2":null,"timeslot":{"class":"Timeslot","id":4},"topic":"Busy Developer's Guide to Voice Apps using Tropo","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":16,"description":"Java bytecode is the code set used by the Java runtime (the JVM) that is JIT-compiled into native code at runtime. Find out how to read (and write) JVM bytecode directly, so as to better understand how the runtime works, and be able to disassemble key libraries that you depend on. We?ll even take a look at the new bytecode instructions being debated for introduction in Java 7, and how they might behave and operate. We'll also tackle examining tools and libraries that can be used to manipulate Java bytecode directly, such as Javassist, ASM and BCEL, and why and when you might do this. ","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":9},"speaker2":null,"timeslot":{"class":"Timeslot","id":11},"topic":"Busy Java Developer's Guide to JVM Bytecode","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":93,"description":"World is using Hadoop Map Reduce to perform large scale computing tasks. Does it fit every possible situation? When it's not optimal, and what are the approaches to overcome those problems? Short introduction on idea behind Sparc data processor and Shark query engine. Architecture overview, pros and cons. How the solution fits into existing systems. What are the benefits - is it worth trying and when? Limitations. Few code examples explained.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":67},"speaker2":null,"timeslot":{"class":"Timeslot","id":18},"topic":"Cluster world does not end on Hadoop Map Reduce: Shark/Sparc accelerators.","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":32,"description":"Invoke dynamic is a Java 7 feature that had the most impact at the bytecode level and also in terms of performance. First perceived as a feature to help dynamically typed languages on the JVM, it turned into a powerful feature that has been exploited quite a bit in the implementation of features in the Java language itself. In this presentation we will understand what problem this features really solves and how it has influenced other features in the Java language and on the Java platform.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":10},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"Demystifying invokedynamic","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":48,"description":"I was very disappointed when the Discovery Channel cancelled \"Dirty Jobs\" without dedicating an episode to \"Debugging\", a job many consider far more disgusting than that of the \"Geoduck Harvester  or the \"Turkey Inseminator\". For the unfamiliar, the show features Mike Rowe performing difficult and stomach-turning occupational duties of some of the messiest jobs in America. I have yet to meet a software engineer who jumps out his or her chair in excitement at the thought of fixing one of his or her bugs let alone other people's. It can be one frustrating of a task, and sometimes \"twice as hard as writing a program in the first place\" in the words of Brian Kernighan who needs no introduction. In this session, you will be exposed to a more systematic and rigorous approach to debugging, and will be introduced to a number of techniques and methods inspired by modern studies in cognitive psychology, the philosophy of science, and other fields. A survey of the available tooling will also be conducted. Come to the session to join the coalition forces on the war on bugs. You never know, you might end up changing your mind about your favorite part of being a software engineer after all.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":48},"speaker2":null,"timeslot":{"class":"Timeslot","id":13},"topic":"Dirty Jobs: Debugging - The Missing Episode","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":45,"description":"Have you ever been in a project where doing Web front coding was a worst possible\r\nengagement in a team?\r\nWe Java developers can do really great code ,we do tdd, clean code,  reviews, static analysis etc.. Well, mostly as long as we talk about the Java part that is working on the server side.\r\nWhen it comes to a GUI  things are slightly different. We tend to create lot of JS, CSS,HTML  having no real  clue what is going on. Copying and pasting code that we got from Web Designers. Eextending it with some random snippets we find in Internet. And then we get the mess?  And we make it public.\r\nIn the talk there will be shown some common problems for Java developers that are associated with web development.  There will be also proposed solutions, rules and tools that can help in overcoming pitfalls.   Surprisingly? the most important rule is that once You do web development -  you  have to make it exactly as serious as any other development !!!\r\nWhole presentation is done as a Web page in HTML5/CSS3 with lot of nice features that show themselves power and possibilities of modern Web applications.\r\nWeb show -live coding","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":49},"speaker2":null,"timeslot":{"class":"Timeslot","id":15},"topic":"Doing WEB  development clean way","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":94,"description":"This session will present the most important new stuff in Java™ 8. It will show how to get started developing Java™ 8 code with Eclipse and then demo the new features that are available in Eclipse for this new Java™ release. We will also look behind the curtain and see how the JDT team accomplished that great piece of work.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":68},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"Eclipse and Java 8 ","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":105,"description":"Orion is an open integration platform focused on developing for the web in the web. With support for cutting-edge web technologies including JavaScript, HTML5, CSS3, Cloud Foundry, Docker.io and more, Orion provides a seamless end-to-end web deveopment expierience entirely in the browser. In this talk, we present new and noteworthy features introduced during the 4.0 and 5.0 releases and discuss future plans.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":81},"speaker2":null,"timeslot":{"class":"Timeslot","id":17},"topic":"Eclipse Orion - New and Noteworthy","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":57,"description":"Balance - this is the word we can hear in lots of places but not too often in software development. But what balance can you talk about in our industry? What is the balance we need/ How can we achieve it? Marketing people needs to have a product they can sell, developers needs to have a product that is easy and nice to work with. \r\n\r\nHow can we take care of this balance? Who should take care of it? Can developers only complain “if only I had more time I would write unit tests… / I would take care of the design / the code would be in better shape...”?  Did you hear such complaints next to your desk? So what can we do about the above? It is enough to be a good developer or do we need something more?\r\n\r\nIn my talk I would like to talk about Effective Refactoring.Effective Refactoring joins two things : refactoring and effectiveness. Refactoring is a means to achieve the balance between production (clients receives working product) and production capability (developers are able to extend the product and deliver new functionality). Effectiveness is the mental approach to achieving our goals. Only when you join them you can act reasonably.\r\n\r\nMy goal is to encourage people to change the approach to work by refactoring when needed, by making it everyday practise or a habit. Each of us want to be happy at work. We want to be motivated but do we take care of it? We want to have good quality code, covered by tests, object oriented but what we really do to achieve it?\r\n\r\nI would like to show 7 Habits of Highly Effective People presented by Stephen Covey in his best seller and how they can be applied to software engineering. Here are they.\r\n\r\nBe proactive\r\nAre you waiting for things to be done and complaining? Are you part of the solution or part of the problem? “It’s not me - it’s the team”. Did you hear this complaint?\r\n\r\nStart with end in mind\r\nDo you ask yourself  questions : what I am doing? how should I do this? why I am doing it this way? What will be the outcome of my decisions in the near future? Did I really saved time if I skipped refactoring and quality although the product “is working”?\r\n\r\nImportance before urgency\r\nCertainly sometimes we need to put off the fire at work. But what kind of a motivator it is? “Must do it” vs “want do it” are two different approaches and if you want to use the latter approach you need to to really proactive and minimize the number of fires. Then you will have more freedom to take care of your code.\r\n\r\nThink Win - Win or No Deal\r\nWhat is your approach to collaborators? Do you perceive your  (product) managers / marketing as competitors (time vs quality) or members of one team that drives together towards the success?\r\n\r\nUnderstand before being understood\r\nHow to approach dealing with legacy code? Do you just add you new functionality or consider refactoring before or after this? What you do before you decide to improve the design? Do you want to understand the current state before proposing / imposing your changes?\r\n\r\nIntroduce synergy\r\nDo you understand the difference between compromise and synergy when two people have different opinions and want to achieve agreement? Team can benefit a lot if people are looking together for “third solutions” instead of competing.\r\n\r\nSharpen the Saw\r\nDo you take care of yourself so you are able to make it better? Do you know the areas of yourself to grow (physical, mental, emotional, spiritual dimensions). Do you know that sometimes to be better in refactoring is to stop refactoring?","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":42},"speaker2":null,"timeslot":{"class":"Timeslot","id":13},"topic":"Effective Refactoring","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":38,"description":"One of the most common reasons for software defects is poor exception handling. The more complex the application, the more difficult it can be to track down the root cause of a bug. An exception at the service or database layer may manifest itself as unpredictable behavior at the user interface level. Simple coding errors or unexpected inputs may result in unnecessary and confusing error messages. The net result is an application that doesn't meet the user's expectations.\r\nThese types issues can be avoided by handling exceptions properly. In this session, we'll look at examples of what happens when exceptions aren't handled, and how you can avoid unexpected defects by following a few key principles and using some discipline. We'll also examine the importance of establishing logging standards, and look at how to properly configure error pages and use the error handling facilities in JSF and Java EE applications.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":56},"speaker2":null,"timeslot":{"class":"Timeslot","id":13},"topic":"Expect the Unexpected: Handling Exceptions in Enterprise Applications","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":31,"description":"JavaScript has gained the attention of programmers, once again. If you\\\\\\'re programming on the JVM, Nashhorn is an exciting tool to execute JavaScript, to interface with the ecosystem. Come to this presentation to learn about the strengths and capabilities of Nashorn.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":10},"speaker2":null,"timeslot":{"class":"Timeslot","id":12},"topic":"Exploring Nashorn","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":51,"description":"Slick is an open source Functional Relational Mapping library for Scala that enables queries to be built in a functional way.  With Slick queries are type-safe, composable, and fit better with the relational model.  This session will cover the benefits of FRM over ORM and the basics of Slick.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":46},"speaker2":null,"timeslot":{"class":"Timeslot","id":7},"topic":"Functional Relational Mapping with Slick","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":108,"description":"When searching on Google with the keywords “Gerrit” and “GitHub” you find lots of different links with more questions than answers; see below a selection of the most interesting ones:<ul class=\"list\"><li>Stackoverflow.com – Gerrit with GitHub<\/li><li>Stackexchange.com – Pros and Cons of Code Review vs. Pull Requests<\/li><li>Julien Danjou - Rant about Github pull-request<\/li><li>CloudFoundry.org – Gerrit and Jenkins workflow with GitHub<\/li><li>Gerrit, GitHub, GitLab comparison on YouTube<\/li><li>DZone – GitHub: more on how free sucks<\/li><\/ul>\r\nWe present out experience (and lessons learned) of integrating Gerrit with GitHub trough replication and OAuth SSO using the GitHub plugin for Gerrit Code Review.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":33},"speaker2":null,"timeslot":{"class":"Timeslot","id":13},"topic":"Gerrit Code Review or Github’s fork and pull? Take both!","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":80,"description":"SQL is a powerful and highly expressive language for queries against relational databases. SQL is established, standardised and hardly challenged by alternative querying languages. Nonetheless, in the Java ecosystem, there had been few relevant steps forward since JDBC to better integrate SQL into Java. All attention was given to object-relational mapping and language abstractions on a higher level, such as OQL, HQL, JPQL, CriteriaQuery. In the mean time, these abstractions have become almost as complex as SQL itself, regardless of the headaches they're giving to DBAs who can no longer patch the generated SQL.\r\njOOQ is a dual-licensed Open Source product filling this gap. It implements SQL itself as an internal domain-specific language in Java, allowing for the typesafe construction and execution of SQL statements of arbitrary complexity. This includes nested selects, derived tables, joins, semi-joins, anti-joins, self-joins, aliasing, as well as many vendor-specific extensions such as stored procedures, arrays, user-defined types, recursive SQL, grouping sets, pivot tables, window functions and many other OLAP features. jOOQ also includes a source code generator allowing you to compile queries in modern IDEs such as Eclipse very efficiently.\r\njOOQ is a good choice in a Java application where SQL and the specific relational database are important. It is an alternative when JPA / Hibernate abstract too much, JDBC too little. It shows, how a modern domain-specific language can greatly increase developer productivity, internalising SQL into Java","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":21},"speaker2":null,"timeslot":{"class":"Timeslot","id":5},"topic":"Get Back in Control of Your SQL","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":22,"description":"The game has changed: we write interactive web applications, we distribute the processing of huge data sets and our services need to be available at all times. This new breed of applications comes with its own set of requirements and forces us to establish new blueprints for designing our systems. In this talk we ask the crucial questions along this path, show which answers work and which don’t, and distill the essence of the common theme—Going Reactive.\r\nIntended Audience:\r\nProgrammers, architects, CIO/CTOs and everyone with a desire to challenge the status quo and expand their horizons on how to tackle the current and future challenges in the computing industry.","priority":50,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":14},"speaker2":null,"timeslot":{"class":"Timeslot","id":5},"topic":"Go Reactive: Blueprint for Future Applications","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":50,"description":"Java 8’s lambdas make building Reactive applications a whole lot easier and cleaner.  Through copious code examples this session will show you how to build event-driven, scalable, resilient, and responsive applications with Java 8, Play Framework and Akka.  On the web side you will learn about using lambdas for async & non-blocking requests & WebSockets.  You will also learn how the actor model in Akka pairs well with lambdas to create an event-driven foundation that provides concurrency, clustering and fault-tolerance.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":86},"speaker2":null,"timeslot":{"class":"Timeslot","id":11},"topic":"Going Reactive with Java 8","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":46,"description":"This talk will give the audience an introduction into Hazelcast, the open source in-memory data grid.\r\nHazelcast helps developers and vendors to scale in and out on data and data processing as well as scaling their applications itself.\r\nThe talk is filled with some smaller demos and some short live codings. It will show basic features, how easy it can be to work on cluster environments and how Hazelcast can help on scaling your data and applications.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":50},"speaker2":null,"timeslot":{"class":"Timeslot","id":12},"topic":"Hazelcast 3 - In-Memory DataGrid","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":9,"description":"Vert.x is a lightweight, high performance, reactive application platform for the JVM that’s designed for modern mobile, web, and enterprise applications. In this talk you will learn about the design principles and motivation behind Vert.x and why we are heading for a reactive future.\r\nYou will also hear an overview including demonstrations of some of the key features of Vert.x including the distributed event bus which extends right into the browser, high availability, and the module system. Demonstrations will involve examples in Java, JavaScript, Scala, Groovy and Python.\r\nYou’ll also learn about how improved build tool and IDE integration simplify the process of developing applications with Vert.x – including short demonstrations of module auto-redeploy from the IDE and executable “fat jars”","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":5},"speaker2":null,"timeslot":{"class":"Timeslot","id":4},"topic":"High Performance Reactive Applications with Vert.x","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":103,"description":"...and how to prioritize to deliver it. \r\nSuccess is usually defined well at the financial level. At the level of the Stakeholders, your Software Product , not so. To be part of a team delivering success with software we must know what success looks like, not only at the financial level, but at the direct technical level you are working with. For example with regard to usability and security.\r\nHint: user stories and burn down charts do not do the job either. \r\nTips: You will learn practical principles and ideas, gathered from years of experience on focusing product development towards creating success. When people at all levels know how to define success at their level, and all levels support each other, something remarkable happens. Kai Gilb will illustrate the theory real Case studies and examples.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":79},"speaker2":null,"timeslot":{"class":"Timeslot","id":13},"topic":"How to define Success at your level ","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":49,"description":"Scala brings a ton of useful language constructs that even very experienced programmers might find mind-bending (unless the programmer was careful not to tie his thinking to a single programming language). Scala is a object-oriented-functional hybrid language with its own semantic. Knowing it surely makes you a more proficient programmer and for Java ones might be a useful way-out to functional programming world. Come and see Scala by examples that let you get started with the language and apply it to your projects. A mixture of slides with theory and code should be enough to wet your appetite for more.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":47},"speaker2":null,"timeslot":{"class":"Timeslot","id":13},"topic":"How to get started with Scala with examples","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":27,"description":"Test all you want: big changes are dangerous, except when they're small.\r\nIn this talk, we'll cover specific integrations and APIs you can use to automate your workflow. We'll include both tools and practices required to keep shipping small changes quickly, shipping safely, and shipping quality.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":19},"speaker2":null,"timeslot":{"class":"Timeslot","id":17},"topic":"How we use GitHub to continuously integrate GitHub","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":104,"description":"We all know we should write tests and constantly improve quality by inspecting the code. What we don't want to admit (at least out loud) this is often a dull task. During this talk you'll be introduced to a few Eclipse plugins and techniques that will make the experience a bit more pleasant. You'll learn how to make sure each class is tested and how well covered it is with the tests. After the talk, you'll know how to create a missing test with just a few clicks and that includes mock testing. All of this will help you improve quality of your code, making you focus on adding new features and not chasing those pesky bugs over and over again. All tools presented are free and being used in the field. No product selling, just pure pragmatism.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":80},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"Improving code quality with Eclipse","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":69,"description":"Java App deployment is a complex and time-consuming process requiring OS installers, package management tools, configuration management tools, configuration recipes, install scripts, deployment scripts, server tuning, server hardening and more. Is this necessary? Are we trapped in a mindset of doing it this way just because we've always done it this way? \r\nWhat if you could radically simplify all this? What if entire machines could be generated in seconds with a single command? What if you could run the same machine unchanged on your workstation and in the cloud?\r\nThis talk challenges the status quo and proposes a radical rethinking of Java App deployment. If you believe in simplicity and efficiency over complexity and brute force; if you aren't afraid to look forward with fresh thinking, then this talk is for you. Live demo included.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":32},"speaker2":null,"timeslot":{"class":"Timeslot","id":10},"topic":"Inspiration over Perspiration: Java App Deployment for the 21st century","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":74,"description":"This session will show the current state of JavaFX on different platforms like Desktop, Raspberry Pi, Android and iOS. The session will be based on a demo that uses the same code and runs on all the mentioned platforms. It will be explained what you have to take care about and what is possible today using JavaFX on different platforms.\r\n","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":26},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"JavaFX Everywhere","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":106,"description":"From a tool most commonly used to make kinky rollover images in 1990s JavaScript grew to be a real programming language. Now it’s the second most popular language for projects hosted on GitHub. Since in 21st century web browsers are expected to host “web applications” rather then just “sites”, developers have no choice but to learn it.\r\nWith its flexible syntax JavaScript is a dream tool for beginners and a nightmare for professionals. It takes hours to learn it and years to master it. Even when you get pretty good at it, you may end up doing stupid things and nothing will stop you. Let’s spend some time talking about traps set for us by JavaScript and obvious errors that will stay in your code undetected until the most unexpected moment.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":71},"speaker2":null,"timeslot":{"class":"Timeslot","id":17},"topic":"JavaScript Bloopers – most common developers’ mistakes","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":73,"description":"We've come a long way down the JavaScript road. Gone are the days of 'just hack it' for the web - architecting even a small project in JavaScript can be a challenge. Thankfully, there are several frameworks to help you; the most popular currently is AngularJS.\r\nBefore you start using a framework in JavaScript, you will want to understand the techniques expert JavaScript programmers use to build them. In this session, we'll dive into design patterns in JavaScript, and do live coding so you can see these patterns applied. Even if you're not using a framework, you can use these design patterns to make your code more maintainabile, elegant, and concise.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":28},"speaker2":null,"timeslot":{"class":"Timeslot","id":14},"topic":"JavaScript Design Patterns","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":39,"description":"Whether you love it, hate it, or are somewhere in-between, JavaScript is here to stay, and is heavily woven into the fabric of modern web applications. That being said, the language definitely has its warts. And those of us who prefer other languages, especially those with static typing tend to look elsewhere. There’s one problem with other languages, though: they don’t run in a web browser, and they probably never will. Because of this, a quiet revolution is taking place: compiling to JavaScript. It’s now the assembly language of the web; a compilation target for other languages. \r\nThis session takes a look at the latest crop of JavaScript compilers for popular languages such as Java and Scala, plus new languages such as \r\nDart, CoffeScript, and TypeScript.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":56},"speaker2":null,"timeslot":{"class":"Timeslot","id":15},"topic":"JavaScript, the Assembly Language of the Web","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":24,"description":"Moving Agile from Small Scale Craft to an Engineering Discipline, for quality-critical projects, and large-scale projects..\r\nSoftware Engineering is one level of abstraction above the ‘softcrafter' (coder). The engineer thinks and plans in terms of values, qualities, costs; and about the designs and architectures necessary for delivering value for money. Agile engineering iterations measure value, quality, performance and costs: not code.\r\nWe need great coders to support the engineering decisions. And for some classes of software effort, engineering is not needed. Engineering is not needed for private self-built cabins, or dog houses: but citadels and skyscrapers are not build by stonemasons alone.\r\nThis talk will clarify the tools and languages needed to speak ‘engineereese’. Hopefully some of you would like to step up and fulfill the engineering role. We need you for the most important projects. Programming can be fun, but engineering is even more fun!","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":16},"speaker2":null,"timeslot":{"class":"Timeslot","id":8},"topic":"Keynote: Agile Software Engineering","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":1,"description":"So much of the time we focus on what we do and how we do it.\r\nWe read books on coding, we come to conferences, we download open source and sample code, we read blogs and listen to podcasts.\r\nDuring this session we'll explore why we do what we do and for whom. Whether you're inspired or depressed by this talk, you will think differently the next time you open Xcode and type Command-Shift-N and you'll pause before you upload your next app to the app store. Uploading is when you sign your name on your work.","priority":5,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":1},"speaker2":null,"timeslot":{"class":"Timeslot","id":9},"topic":"Keynote: Crazy and Focused","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":88,"description":"2014 marks the tenth year since the creation of the Eclipse Foundation. Eclipse has enjoyed years of great community, great technology and significant impact in the software industry. Eclipse has also evolved from being the Java IDE to being a community of open source projects that span a wide variety of industries and technologies. As we head into our next decade it is time to reflect on what is the potential for the Eclipse community.\r\nThis keynote presentation by Mike Milinkovich, the Executive Director of the Eclipse Foundation, will explore what are the possibilities for Eclipse in the next 10 years. Let’s start a conversation on how the Eclipse community needs to change and grow to take on new challenges and achieve even greater success and impact in the next 10 years. ","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":63},"speaker2":null,"timeslot":{"class":"Timeslot","id":19},"topic":"Keynote: Eclipse: The Next Ten Years","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":87,"description":"As tech industry professionals, you need ways to work better so that you can create more, but what do you do when you hit a seemingly insurmountable mental wall? You need to get unblocked: to bust through that barrier to allow creativity to flow. Combining the neuroscience of creativity, productivity techniques, emerging practices that spur innovation and synergistic collaboration, we'll discover techniques and tools to get past those mental barriers that keep you stuck (or at least slow you down). We'll further uncover the ways in which our brains work best creatively: what’s behind the times when we feel on fire with ideas and inspiration…and when we don't. These processes and techniques will not only enhance creative productivity, but they will also have you operating from a place of passion and excitement. Beware: this session challenges the standard norms around concentration, focus, productivity, and may change how you work…for the better.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":62},"speaker2":null,"timeslot":{"class":"Timeslot","id":20},"topic":"Keynote: Get Unblocked","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":15,"description":"You're a manager. You've been hired to run a small (or large) development team, and for the life of you, you can't understand these people. Every time you try to motivate them, they balk and resist. You try to hire them, you can't figure out what they want and they walk away. Then, without any sort of action on your part, suddenly they put in 16-hour days, and they pull off some amazing work, but when you try to ask them to do it again for a critical update, they get angry and quit. What the heck? Where did these bizarre alien creatures come from, and how in the world are you supposed to work with them? \r\nYou're a developer. You work for what has to be the most clueless manager in history. For the life of you, you can't understand this guy. He keeps trying to \"motivate\" you when all you want is for him to get out of the way. He's ready to drop thousands (or millions) of dollars on a release party, but getting him to pony up some cash for a conference or training class is like wringing blood from a rock. What the heck? Where did this bizarre alien creatre come from, and how in the world are you supposed to work with him?","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":9},"speaker2":null,"timeslot":{"class":"Timeslot","id":2},"topic":"Keynote: Managers are from Mars, Developers are from Venus","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":30,"description":"It's been around for a long time, but everyone's talking about it all of a sudden. But why and why now? We've been programming in languages like Java for a while, quite well. Now we're asked to change and the languages themselves are changing towards this style of programming. In this keynote, a passionate polyglot programmer and author of \"Functional Programming in Java: Harnessing the Power of Java 8 Lambda Expressions\" will share the reasons we need to make the paradigm shift and the pure joy—the benefits—we will reap from it.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":10},"speaker2":null,"timeslot":{"class":"Timeslot","id":18},"topic":"Keynote: The Joy of Functional Programming","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":8,"description":"Have you ever worked on software that disappointed customers? That created problems when it was used? That was never used? Success has many parents, but failure is always an orphan.   \r\nIt’s time for developers to take responsibility, along with their teammates, for delivering something that really solves problems for customers. They should not assume that just because someone tells them to do something, it is the right to do. They must be responsible for assuring that what they develop is the right thing to develop. \r\nThis talk is about how shared responsibility, short feedback loops, and the shadow of the future make everyone a parent when it comes to developing complex software systems.\r\n","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":4},"speaker2":null,"timeslot":{"class":"Timeslot","id":1},"topic":"Keynote: Think For Yourself","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":76,"description":"Refactoring in the Large Software projects is a complex and challenging task that is very difficult to accomplish without mistakes. In this presentation I would like to share experience how to successfully execute complex restructurings, the main rules and common pitfalls for performing such refactorings.\r\nAll these rules have been gathered based on previous experience and several examples of such refactorings and potential issues will be demonstrated.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":24},"speaker2":null,"timeslot":{"class":"Timeslot","id":17},"topic":"Large Scale Refactoring","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":92,"description":"In the world of multi-core programming, traditional parallel programming techniques with locks (mutexes and similar mechanisms) create performance bottlenecks. Lockless programming is a set of techniques employing atomic operations to synchronize data exchange between threads. The talk introduces the audience to the lockless programming, presents its benefits and pitfalls. The presenter will talk about support for atomic operations in different CPU families as well as support for them in lower- and higher-level languages. He will also cover reordering and memory barriers. He will end the talk with tips on designing lockless algorithms and practical examples of lockless data structures.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":66},"speaker2":null,"timeslot":{"class":"Timeslot","id":5},"topic":"Lockless programming","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":36,"description":"“Micro Service Architecture is an architectural concept that aims to decouple a solution by decomposing functionality into discrete services. Think of it as applying many of the principles of SOLID at an architectural level, instead of classes you've got services”. Acknowledge that and endless possibilities start to open.\r\nIn this talk I’ll walk through several scenarios, where the microservice approach worked for us: from green field solutions, to handling legacy systems. The microservices in various aspects: duplicating functionality, proxing existing applications, bubbling new services on the top of existing big bull of mad. The microservice approach solving some painful problems become much easier, without “we need to rebuild it, redesign it” cliché. It appeared possibilities were endless: wrapping existing monolithic PHP application as a microservice in another PHP application, building a bubble on top of existing PHP code with dropwizard and AngularJS, wrapping some legacy ActiveX components with python Win32 extensions. All with one common denominator: HTTP as the basic dialect.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":57},"speaker2":null,"timeslot":{"class":"Timeslot","id":11},"topic":"Microservice everything","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":99,"description":"Today's applications are systems, not large applications. They consist of smaller, singly-focused services, usually connected over REST. To achieve maximum velocity, services today are continuously deployed and integrated. Services need to slot into the system with ease, they need to be secure, and they need to be open, transparent. In this talk,\r\njoin Spring Developer Advocate Josh Long (http://twitter.com/starbuxman) for a look at how to build smart, REST and hypermedia-ready, OAuth-secured microservices with Spring Boot.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":73},"speaker2":null,"timeslot":{"class":"Timeslot","id":7},"topic":"Microservices and REST with Spring Boot","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":55,"description":"MongoDB's basic unit of storage is a document. Documents can represent rich, schema-free data structures, meaning that we have several viable alternatives to the normalized, relational model. In this talk, we'll discuss the tradeoff of various data modeling strategies in MongoDB using a library as a sample application. You will learn how to work with documents, evolve your schema, and common schema design patterns.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":44},"speaker2":null,"timeslot":{"class":"Timeslot","id":7},"topic":"MongoDB Schema Design","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":2,"description":"Objective-C code probably looks pretty odd to you. There are square brackets and colons all over the place. There are header files and you can't move an inch without tripping over an \"@\" sign. And yet, Objective-C famously had a big influence on Java.\r\nThere are many more similarities than differences. We'll look at a ton of code in this presentation to introduce you to the language of iOS and OS X development. I'll try to explain the reason why we do things differently in Objective-C than we do in Java and I'll introduce you to some of the fundamental Cocoa patterns.\r\nBy the end of the hour we'll have tuned your Java eyes to read and even enjoy Objective-C code.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":1},"speaker2":null,"timeslot":{"class":"Timeslot","id":3},"topic":"Objective-C for Java programmers","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":75,"description":"It is well known that applying coding conventions, specially in long projects, simplifies the project maintenance. Indeed, Sun Microsystems said 40%-80% of the lifetime cost of a piece of software goes to maintenance.\r\nWith the current QA tools, such as PMD or FindBugs, we can detect automatically which files of our code do not follow a list of our own coding conventions. In this way, we can get a list of which files are violating a convention. But who will always fix the code? Ourself.\r\nThat's the reason why we have been build Walkmod (http://www.walkmod.com); an open source tool to automatically apply and share coding conventions in a software project.  For example, having a license header in all source files, applying an specific design pattern are common tasks which are easy to do with Walkmod.\r\nIn this session, the presenter will cover all main aspects of walkmod, how attendees can design their own coding conventions.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":25},"speaker2":null,"timeslot":{"class":"Timeslot","id":15},"topic":"Open and automatic coding conventions with Walkmod","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":61,"description":"Bottom-up or top-down, emerging design, TOGAF, UML, BPMN, SOA, large scale, small scale, new shiny written by hipsters or good old legacy written by Iron Maiden fans? \r\nHow to build architecture of your system? How to transition your current design and don't get mad, don't waste time for \r\nunproductive meetings, discussion, arguments and cheap talks, writing down business cases, searching for business value and justifying business justification.\r\nAfter years of small and large projects, waterfall, Agile, Kanban, couple of paradigm shifts, couple of trend explosions, new and shiny tools and techniques. After all this I understood that whatever we want to believe it or not, we don't deliver code, business value or company success. \r\nThe only thing we do is we increase entropy of this world, by adding more and more complexity, that no matter how fast CPU executes our code, how much time and effort we put in quality, at the end of day each software will be destroyed by its complexity. Maybe \"\"Software is eating the world\"\", but for sure complexity swallows the software at the same time.\r\nDuring this talk I would like to share with you a few patterns I have discovered, learned and stole over the years, a couple of obvious, well known tips&tricks, which we tend to forget about, so I gave them a name to make it easier to remember about them. I called them Patterns of Organic Architecture.\r\nWhy? Because the only thing that seems to be able to cope with complexity is nature. Nature doesn't plan, doesn't use advanced frameworks, doesn't have deadlines, meeting, memos and such. And still we discover more and more beautiful works of nature which amaze us with its simplicity.\r\nThis talk will prove that if you learn how nature works, how much you can learn exploring pyramids and that some of the systems have strange attractors, you will not need software enterprise principal architect on your team, because he will never ever again leave his ivory tower. \r\nYou will learn how to grow your system!","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":39},"speaker2":null,"timeslot":{"class":"Timeslot","id":11},"topic":"Patterns for Organic Architecture - let it grow!","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":37,"description":"PrimeFaces continues to be the most popular UI component suite for building web applications using JSF and Java EE. Built on top of jQuery, the open source suite features over 100 components with powerful client-side and server-side functionality, as well as seamless integration with Java back-ends. Coupled with HTML5, Ajax Push powered by Atmosphere, mobile support, and customizable themes, PrimeFaces is a great way to build modern web applications. This session covers the core PrimeFaces components as well as the key new features in PrimeFaces 5.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":56},"speaker2":null,"timeslot":{"class":"Timeslot","id":10},"topic":"PrimeFaces 5: Modern UI widgets for Java EE","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":109,"description":"","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":83},"speaker2":{"class":"Speaker","id":84},"timeslot":{"class":"Timeslot","id":15},"topic":"Programming for the Cloud - challenges","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":64,"description":"Project Avatar is an open source platform platform for server-side JavaScript applications on the Java Virtual Machine, using the node programming model, APIs, and the module ecosystem. These Java/JavaScript hybrid applications can leverage capabilities of both environments—accessing the latest node frameworks while taking advantage of the Java platform’s scalability, manageability, tools, and extensive collection of Java libraries and middleware. In this session, you will learn how to write hybrid applications that take advantage of both ecosystems. Various demos will illustrate the session.\r\n","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":35},"speaker2":null,"timeslot":{"class":"Timeslot","id":6},"topic":"Project Avatar - Server-Side JavaScript on the Java Platform","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":67,"description":"The reactive manifesto movement promotes architecture that lets developers build applications to satisfy today’s demands of scalable, resilient and readily responsive websites and services. The cornerstone of such systems is their event driven nature. Rx java provides an interface that abstracts event delivery. It is aimed at simplifying server-side concurrency.  With a set of functional operators for filtering, grouping, transforming and combining event streams Rx Java gives you powerful tools to create event driven systems. I will show you how to use this library on client and server side, how it influences application design and why this approach is superior to using futures and callbacks. I will present lessons we learned when using Rx Java in our production services; we will take a closer look at its performance characteristics and limitations. I will also show how one can use this approach to get rid of listeners and observers when interacting with various event producers (such as UI).\r\n","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":34},"speaker2":null,"timeslot":{"class":"Timeslot","id":17},"topic":"Reactive Java","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":60,"description":"When mentioning Akka, most of us think of a framework allowing one to design high performant, scalable, and fault tolerant systems. But the question is, how can one utilize the power of reactive programming when surrounded by legacy? \r\nIn this talk, we will share our insights and experiences from developing high performance systems with Akka. Despite that Akka APIs are more favorable in Scala, we have chosen and successfully used Akka’s Java APIs. A strategy that may have significant impact on the business and the success of a project. In addition, we will present how domain specific requirements influences your design options, the traps we have walked into, and how everyone may benefit from Akka regardless of green or brown field development.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":38},"speaker2":{"class":"Speaker","id":40},"timeslot":{"class":"Timeslot","id":10},"topic":"Reactive Programming With Akka - Lessons Learned","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":34,"description":"The world of frameworks became a pretty dangerous jungle nowadays. Swamped in dependencies, forced to bend your architecture to their needs, you find yourself shaving yaks and tackling accidental complexity. Hidden magic makes it even worse, setting up traps everywhere you step. In an ideal world you would like to express all your needs in code - thats what we love, don’t we?\r\nDropwizard brings some sanity to this madness. It’s a production ready mix of Jetty, Jersey, Jackson, Metrics, Guava, Logback and nothing more. A perfect match for microservices based architecture.\r\nIn this talk we will ride through Drowizard’s features and confront them with my experiences from Schibsted. I’ll pay special attention to:<ul class=\"list\"><li>embedded containers and how they decrease the gap between dev and prod<\/li><li>DIY DI and how to live in a world not infected by IoC containers<\/li><li>metrics and how to get service health on a grasp<\/li><\/ul>","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":59},"speaker2":null,"timeslot":{"class":"Timeslot","id":4},"topic":"RESTing away from hell","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":13,"description":"Skinny modules, design by contract without a contract, proliferation of deployment packages are examples of a typical enterprise cargo cult disease. In this session I would like to discuss a \"perfect\" Java EE 7 architecture and focus on the modularization, interaction and architectural aspects of Java EE 7. Warning: this time I will use some slides. This session is planned to be interactive -- disrupting questions are highly appreciated.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":7},"speaker2":null,"timeslot":{"class":"Timeslot","id":10},"topic":"Rethinking packaging, modularization, interfaces and plugins with plain Java EE 7","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":29,"description":"The significant new language feature in Java SE 8 is the introduction of Lambda expressions, a way of defining and using anonymous functions.  On its own this provides a great way to simplify situations where we would typically use an anonymous inner class today.  However, Java SE 8 also introduces a range of new classes in the standard libraries that are designed specifically to take advantage of Lambdas.   These are primarily included in two new packages: java.util.stream and java.util.function.\r\n\r\nAfter a brief discussion of the syntax and use of Lambda expressions this session will focus on how to use Streams to greatly simplify the way bulk and aggregate operations are handled in Java.   We will look at examples of how a more functional approach can be taken in Java using sources, intermediate operations and terminators.  We will also discuss how this can lead to improvements in performance for many operations through the lazy evaluation of Streams and how code can easily be made parallel by changing the way the Stream is created.\r\n","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":11},"speaker2":null,"timeslot":{"class":"Timeslot","id":12},"topic":"Rethinking Your Code with Lamabdas and Streams in Java SE 8","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":70,"description":"OLAP is not new but until recently was reserved for Big Companies and huge servers. In the age of NoSQL, data scientists and Hadoop we will look at Saiku and Mondrian – open source online analytical processing server. It turns out we can easily implement fascinating interactive reports and charts using familiar relational databases. Aggregation, filtering and visualization was never simpler. No more handcrafted reports and impatient customers.\r\nDuring this session we will learn how to build simple yet powerful data warehouse from real life sample – and with real life experience. Thus we will focus on data loading process, optimizing and customizing the engine. I have a feeling that most of you will leave the room with a desire to build their very own data warehouse right away.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":30},"speaker2":null,"timeslot":{"class":"Timeslot","id":10},"topic":"Saiku – taking OLAP databases into 21st century","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":23,"description":"Many of as aspire to become a senior developer. Many already are or think they are. Many will never be a true one, unless... they change their lives.\r\nWojtek as always wants to shake a little bit your world, but discussing various aspects of our professional lives and trying to discuss answers to questions like:<ul class=\"list\"><li>What makes you a senior software developer?<\/li><li>Is it the title you keep forever once you get there?<\/li><li>Do I need to be in this rat race?<\/li><li>What is the best way to commit professional suicide?<\/li><li>Which skills and character traits are the most important for senior software developer?<\/li><li>What is the perfect shape for such a professional?<\/li><li>What is next in your life?<\/li><\/ul>\r\nInterested? Do you want to chime in? Come!","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":15},"speaker2":null,"timeslot":{"class":"Timeslot","id":4},"topic":"Senior Software Developer Unplugged","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":28,"description":"To get the most out of Specification by Example (SBE), Behaviour Driven Development (BDD) or Acceptance Test-Driven Development (ATDD), you need much more than the right tools. You need high value specifications. How do we get the most out of our specification and test writing effort? How do we turn vague business-speak into testable scenarios? How do we express good acceptance tests that are both readable and automated? How do we distinguish between Stories, Specifications and Scenarios? These and other questions will be addressed in this talk in which we take a practical approach using real-world examples.\r\nIf you work with Cucumber, Fitnesse, SpecFlow or similar tools to support BDD and SBE, you will learn how to avoid common mistakes that teams make when writing tests. You will also  learn to recognise the characteristics that take good example scenarios beyond the role of acceptance tests and into living documentation for long-term value.”","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":20},"speaker2":null,"timeslot":{"class":"Timeslot","id":10},"topic":"Setting a Good Example","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":47,"description":"I have never given this talk before in any conference. It iEnforcing the cloud presence of an organization by exposing a RESTfull API is of extreme importance. It is a demanding and formidable task that can turn out to be either a great asset or a dire liability. This challenge is amplified by the vagueness of what a REST architecture is, and the diversity in approaches and opinions among the leading Web APIs.\r\nThis session attempts a balance between the spirit and philosophy behind REST, and the practicality and elegance inspired by the principles of modern API design. This very idea is highlighted through a series of concrete issues that frequently surface while building or evolving a mature REST interface whose goal is not only to be complete and feature-rich, but also intuitive and practical.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":48},"speaker2":null,"timeslot":{"class":"Timeslot","id":3},"topic":"Smoothing Out the Rough Edges of REST","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":63,"description":"When the Spring Framework saw the light of day, it was a real revolution in comparison to the Java Enterprise Edition. However, in recent years the former has been growing and the letter has been adding more and more default functionalities causing the distinction between them is blurred. \r\nFortunately in recent months Spring Boot has appeared on the market, which is a milestone in the process of the further simplification of application development. Mechanisms such as autoconfiguration or integrated application server again made ​​the takeover of the market complete and left the competition far behind.\r\nDuring this presentation Jakub will briefly describe the main features of this product, and we will learn about its basic elements. We will also see how it can be used in existing applications based on Spring.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":36},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"Spring Boot - and it is light again","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":3,"description":"iOS developers use visual tools for creating the visual aspects of our applications. In this whirlwind tour, you'll see how we use storyboards to create flexible interfaces for both iPhone and iPad. We'll connect our GUI to code and build transitions to segue from one scene to another. We'll use autolayout so that our UI can adjust to screens with different dimensions and localize our content to support different languages. You'll see the code that supports the storyboard but we'll focus on the visual aspects of our apps.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":1},"speaker2":null,"timeslot":{"class":"Timeslot","id":4},"topic":"Storyboards ","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":68,"description":"Everyone knows about TDD nowadays, but do you feel you are spending more time testing than writing code ? Where is the point where tests become an impediment to the evolution of your project ?\r\nInstead of taking a religious approach to TDD (\"\"you MUST ...\"\", \"\"good developers DO ....\"\", \"\"have you read the book XYZ on ...\"\") this talk is more for looking at where we are and what the TDD-mania has lead projects to.\r\nMockist TDD has lead software to a even higher level of complexity, up to the point where looking at the tests lead to a much higher confusion rather than just reading the code.\r\nWe will go through the TDD-related problem and real-life experiences in a very interactive talk, with a common goal to see what we can do now to make our tests more a tool for a better code rather than a karma for our development working life.","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":33},"speaker2":null,"timeslot":{"class":"Timeslot","id":15},"topic":"Test for better code or coding for better tests ?","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":72,"description":"Mocha is a popular testing framework for JavaScript - for any JavaScript environment, including the Web Browser, NodeJS, and Titanium. It allows for simple asynchronous testing, test coverage, and integration to CI tools. In this session, learn all you need to know about getting started for writing beautiful tests in JavaScript for these environments. We’ll discuss a number of add-ons for Mocha to make testing a breeze. We’ll talk about “should” and “chai” for expectation matching. We’ll discuss “simon” for mocking in your test cases. We’ll also talk about test automation with Grunt.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":28},"speaker2":null,"timeslot":{"class":"Timeslot","id":11},"topic":"Testing JavaScript with Mocha","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":85,"description":"You spend your precious time building the perfect application. You do everything right. You carefully craft every piece of code and rigorously follow the best practices and design patterns, you apply the most successful methodologies software engineering has to offer with discipline, and you pay attention to the most minuscule of details to produce the best user experience possible. It all pays off eventually, and you end up with a beautiful code base that is not only reliable but also performs well. You proudly watch your baby grow, as new users come in bringing more traffic your way and craving new features. You keep them happy and they keep coming back. One morning, you wake up to servers crashing under load, and data stores failing to keep up with all the demand. You panic. You throw in more hardware and try optimize, but the hungry crowd that was once your happy user base catches up to you. Your success is slipping through your fingers. You find yourself stuck between having to rewrite the whole application and a hard place. It's frustrating, dreadful, and painful to say the least. Don't be that guy! Save your soul before it's too late, and come to learn how to build, deploy, and maintain enterprise-grade Java applications that scale from day one.\r\nTopics covered include: parallelism, load distribution, state management, caching, big data, asynchronous processing, and static content delivery. Leveraging cloud computing, scaling teams and DevOps will also be discuss. P.S. This session is more technical than you might think.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":48},"speaker2":null,"timeslot":{"class":"Timeslot","id":12},"topic":"The Economies of Scaling Software","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":44,"description":"We have TDD, BDD, CI, CD, cloud, and REST - it was supposed to be all great, ended up being \"\"as usual\"\". We forgot about \"\"your code is not clean\"\", \"\"people on the team think you’re really arrogant\"\", \"\"I don't want to work here\"\". In this presentation I will talk about:<ul class=\"list\"><li>how to effectively give suggestions to others,<\/li><li>the challenges you come across when giving feedback,<\/li><li>patterns useful for receiving feedback effectively,<\/li><li>and many other concepts, which make it easier to use feedback on your team.<\/li><\/ul>","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":51},"speaker2":null,"timeslot":{"class":"Timeslot","id":4},"topic":"The missing link of Agile - improve people first, systems next","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":42,"description":"During the course of this talk we're going to take a deep dive into what allows developers to be successful. We're going to start our journey from basics of how to be productive and stay in the zone, and will end up on checking out what tools are out there available to help us to achieve that goal.\r\n","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":54},"speaker2":null,"timeslot":{"class":"Timeslot","id":12},"topic":"The Mythical 10x developer","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":83,"description":"If you think that agile software development is about short iterations and standup meetings – think again. The technical heart of agile is the ability to develop <strong>Known Good Stuff<\/strong>. That means that you know at any time that what has been done so far actually works – and will continue to work correctly all the way through integration, acceptance testing, and in actual use. By taming the integration monster you tame the complexity monster as well.\r\nAt the heart of successful agile development, we always find short end-to-end feedback loops that guarantee quality and fitness-for-use <strong>as code is being written<\/strong>. It is wasteful and irresponsible to develop software with hidden defects that will only show themselves later, or with features that are useless – or worse, annoying – for customers. \r\nThis talk is about Continuous Delivery: what it means, what it takes to make it work, and why it is essential to good software engineering today – even, or especially, for large systems. It covers a lot of ground, from automation and aggressive testing to DevOps and deployment strategies.\r\n","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":4},"speaker2":null,"timeslot":{"class":"Timeslot","id":5},"topic":"The Technical Heart of Agile","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":95,"description":"Some companies prefer to work in waterfall. Some are truly Agile. Majority does both - they pretend to be Agile, but they work in old-fashioned way. So what is Agile? What does it mean to be an Agile company? We will explore this matter based on examples from IT industry trying to address large corporations, but also the phenomenon of start-ups.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":69},"speaker2":null,"timeslot":{"class":"Timeslot","id":6},"topic":"The Third Way - What Agile Is, Should Be, Is Not","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":26,"description":"Having built Evernote apps for several wearable devices, including the Samsung Galaxy Gear and the Pebble Smartwatch, Damian will take you through the behind-the-scenes journey of building these apps, from deciding what functionality to expose to the technical details of how he built them and why.\r\nDamian will also cover the latest developments in wearable app development, with code examples covering the major wearable vendors.\r\nCome prepared to see code and examples in C, JavaScript, Java and more.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":18},"speaker2":null,"timeslot":{"class":"Timeslot","id":6},"topic":"Under the covers of a successful wearable app","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":41,"description":"Netty 4 is the newest version of the asynchronous framework that powers Akka, Elasticsearch, Finagle, JBoss, Play, Storm,  and numerous other high-performance projects. Perhaps you want to write such apps. But Netty’s APIs require some effort to understand. Even with provided sample code and docs, it's not immediately clear how to construct Netty channel pipelines, or what methods are invoked in Netty handlers as network events occur.\r\nTo slice through this complexity, Jython’s socket-reboot project offers a Rosetta Stone for understanding Netty. Jython uses Netty to implement C socket semantics on top of the underlying Java NIO support. This means being able to support such semantics as switching from blocking mode to nonblocking mode, and back, at any time, while support selection regardless of mode. But such mode switching only requires 12 lines of code. Selector support only requires 10 lines. And so forth. Just like if you were trying to initially understand a foreign language you might turn to a dictionary or a phrase book instead of a novel, using a translation between C and Java like socket-reboot can give you better insight for what your own app needs.","priority":100,"room":{"class":"Room","id":3},"slidesLink":null,"speaker":{"class":"Speaker","id":53},"speaker2":null,"timeslot":{"class":"Timeslot","id":14},"topic":"Understanding Netty via socket-reboot","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":52,"description":"\"Do you know what CSRF is? Or what direct object reference vulnerability means? If not, then your application might have a serious security vulnerability.\r\n\r\nFrameworks like GWT and Vaadin take care of some aspects of information security on the developers’ behalf whereas other aspects are still up to the developer to get right. This presentation walks through the OWASP Top 10 list of typical security flaws and investigates how they relate to applications developed using GWT or Vaadin. The goals of the presentation is to show how a mature framework can improve security and to make developers aware of aspects that they still need to handle themselves. The talk will give you insights regarding your own web application security regardless of if you are using GWT, Vaadin or any other framework. Beginner or Intermediate level.\"\r\n","priority":100,"room":{"class":"Room","id":2},"slidesLink":null,"speaker":{"class":"Speaker","id":45},"speaker2":{"class":"Speaker","id":60},"timeslot":{"class":"Timeslot","id":14},"topic":"Web Application Security and modern frameworks","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":17,"description":"WildFly 8 (née JBoss Application Server) is Red Hat's open source Java EE 7 compliant application server. It contains robust implementations of WebSocket, Batch, JSON, Concurrency, JMS2, JAX-RS 2, CDI 1.1, and all Java EE 7 technologies. Undertow is the new cutting-edge web server in WildFly 8 and is designed for maximum throughput and scalability, including environments with over a million connections. The number of ports is reduced by multiplexing protocols over HTTP using HTTP Upgrade. Role Based Access Control support organizations with separated management responsibilities and restrictions. Roles represent different sets of permissions such as runtime operation execution, configuration areas that can read or written, and the ability to audit changes and manage users. In addition a new restricted audit log can be enabled including the ability to offload to a secure syslog server. It also provides a rich web-based administration console and a powerful CLI for management. Multi instance cluster with high availability can be easily created. You don't even need to download WildFly in order to experience this functionality. Applications can be directly deployed to OpenShift, Red Hat's open source PaaS offering. This session will provide an overview of all these features using several live demos.","priority":100,"room":{"class":"Room","id":4},"slidesLink":null,"speaker":{"class":"Speaker","id":6},"speaker2":null,"timeslot":{"class":"Timeslot","id":5},"topic":"What's new in WildFly?","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":43,"description":"When a code-base grows beyond a certain size, any original arrangement of source files (or architecture) is often lost. The developers also become lost, and start drowning in the ever-expanding sea of classes. \r\nUsually the underlying code – the classes – are in reasonable shape. The problem is that there are too many classes to understand without any higher-level guiding structure, and physical structures (such as packages or jars) have become a tangled mess.\r\nThe good news is that it is generally perfectly feasible to organize existing classes into a modular hierarchy with minimal impact on the implemented code. This is far less expensive than starting over, and more likely to succeed! A code-base with a clearly communicated, cogent architecture is much more valuable than a Big Ball of Mud, and developers will love the result.\r\nThe process of architecture discovery/development requires the use of “code-first” modeling tools such as Structure101, Lattix, SonarGraph, etc., which parse the as-is code and capture the containment and dependency structures. This model can be manipulated to organize classes into a new containment hierarchy by reusing useful aspects of the existing physical structures, and/or assembling together cohesive clusters of classes from the bottom-up. \r\nOnce a measurably well-structured containment model is in place, the allowable visibility and dependencies between groups of classes can be defined, and the code refactored as needed to make it conform. The alignment of the physical structures can follow once the implementation-level code already conforms to the target architecture.","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":52},"speaker2":null,"timeslot":{"class":"Timeslot","id":6},"topic":"Where's your Architecture?","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":35,"description":"It's not enough to be great in your favorite web framework or be a local hero of TDD. To have real satisfaction from your work you should get out of your developerish comfort-zone and make a step towards the business. Understand what jobs your customers are performing and how your software helps (or hampers?) that. Be proactive by asking why does business really need all their features. And yes, it's really important that all developers think this way and do not delegate all contact to clients to a business analyst or whoever.\r\nWe'll take a look at which approaches, practices and tools help to achieve such an attitude.","priority":100,"room":{"class":"Room","id":6},"slidesLink":null,"speaker":{"class":"Speaker","id":58},"speaker2":null,"timeslot":{"class":"Timeslot","id":11},"topic":"You're not (only) developers","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":107,"description":"Gerrit at Eclipse Foundation have really long history. Initially only EGit and JGit projects could use this tool, but starting from February 2012 Gerrit become fist class citizen in Eclipse ecosystem. Every Eclipse Foundation's project can immediately start using its powerful code review capabilities. Capabilities that together with TDD and CI create safety net against bugs for software development.\r\nFor quite long time Gerrit features set was pretty closed and adding new functionality required upstream code base changes. That means either you ended up in port and rebase nightmare or contributed your changes back to community... where they could not have been accepted because they solve your domain's problem not something that is vital for the community edition. \r\nPlugin support in Gerrit was initially introduced in version 2.5. Since then amount of available extension points substantially increased. In this presentation we will understand Gerrit plugins architecture. We will discuss extensions and plugins especially differences between them and which one to choose when. We will see how to combine everything together (including WEB UI) to get your first full blown Gerrit plugin.","priority":100,"room":{"class":"Room","id":5},"slidesLink":null,"speaker":{"class":"Speaker","id":82},"speaker2":null,"timeslot":{"class":"Timeslot","id":18},"topic":"Your own full blown Gerrit plugin","type":"Talk"},{"class":"pl.dworld.degree33.Talk","id":96,"description":"Zaawansowane warsztaty Android przedstawiające użycie Location API. Warsztaty przybliżają uczestnikom Location API, Map API v2 oraz osmdroid (opensorsową platformę z mapami). Celem warsztatów jest nauka używania Location API na praktycznych przykładach. \r\nAgenda:<ul class=\"list\"><li>pobieranie lokalizacji w \"stary\" sposob i przez google play serwisy<\/li><li>maps api v2, użycie, poligony, overlaye, jakies ciekawsze usecasey<\/li><li>alternatywa dla map googlowych - osmdroid<\/li><li>testowanie apek lokalizacyjnych - pozorowane położenie<\/li><li>przykłady użycia, problemy, tips&tricks<\/li><\/ul>","priority":100,"room":{"class":"Room","id":7},"slidesLink":null,"speaker":{"class":"Speaker","id":70},"speaker2":null,"timeslot":{"class":"Timeslot","id":3},"topic":"(Polish) Android Location API - możliwości i przykłady","type":"Workshop"},{"class":"pl.dworld.degree33.Talk","id":91,"description":"Software engineers everywhere are looking for faster, easier ways to get their jobs done.  They don’t want to worry with infrastructure or installing software—they just want to code! \r\nIn this workshop, attendees will learn how they can leverage JazzHub, a Software as a Service (SaaS), and Codename: BlueMix, a Platform as a Service (PaaS), to develop applications in the cloud without having to install any software on their devices. \r\nBring your laptop, tablet, or smart phone and get ready to code!  Attendees will break into small teams and work together to improve an existing application.  They will be able to track their work, file defects, update their application’s code, and see their application running live.  They will also have the option of setting up automatic deployments, so they can see DevOps in action!","priority":100,"room":{"class":"Room","id":7},"slidesLink":null,"speaker":{"class":"Speaker","id":78},"speaker2":{"class":"Speaker","id":65},"timeslot":{"class":"Timeslot","id":10},"topic":"Code in the Cloud for the Cloud!","type":"Workshop"},{"class":"pl.dworld.degree33.Talk","id":7,"description":"Build your first Dart web app in this 2-hour, hands-on code lab. Go from zero to fully working app built with Dart's structured language, comprehensive libraries, and productive tools. You'll learn also learn how to compile your app into JavaScript to run across the modern web.","priority":100,"room":{"class":"Room","id":7},"slidesLink":null,"speaker":{"class":"Speaker","id":3},"speaker2":null,"timeslot":{"class":"Timeslot","id":5},"topic":"Dart Code Lab","type":"Workshop"},{"class":"pl.dworld.degree33.Talk","id":81,"description":"Agile has mostly solved the problem of delivering working software efficiently. We are quite good at \"\"creating software right\"\". Now it's time to improve on the trickier part - how to \"\"create the right software\"\". What we want is software that has an impact on our clients' lives or businesses.\r\nImpact Mapping is a great tool to help teams build only what is really needed. It helps by aligning activities of all delivery activities with business goals. It also helps to expose and communicate assumptions. The process itself is visual and collaborative, which works as if you added at least 50 IQ points to each team member.\r\nThe session will include a short introduction to Impact Mapping. We'll also see how an Impact Map can help in identifying assumptions and making strategic decisions.\r\nThis session works best in a workshop settings, where participants sit in small groups. If room won't allow, participants will do small activities themselves to practice Impact Mapping at least a bit.","priority":100,"room":{"class":"Room","id":7},"slidesLink":null,"speaker":{"class":"Speaker","id":58},"speaker2":null,"timeslot":{"class":"Timeslot","id":16},"topic":"Impact Mapping - Creating Software that Matters","type":"Workshop"},{"class":"pl.dworld.degree33.Talk","id":53,"description":"In this workshop you will learn how to use MongoDB server and develop your first application on a Document Oriented Database. During this session we will see:<ul class=\"list\"><li>Installation and Configuration<\/li><li>CRUD Operation<\/li><li>Java Drivers<\/li><li>Document Design<\/li><li>Advanced Topics: Aggregation Framework, Geo Queries, Full Text Search<\/li><li>Deployment consideration<\/li><\/ul>","priority":100,"room":{"class":"Room","id":7},"slidesLink":null,"speaker":{"class":"Speaker","id":44},"speaker2":null,"timeslot":{"class":"Timeslot","id":12},"topic":"MongoDB Hands On: Develop your first MongoDB application","type":"Workshop"},{"class":"pl.dworld.degree33.Talk","id":21,"description":"<p>Software is the heart and soul of a vast number of products and business processes; every year the ability to develop robust software systems quickly and reliably becomes more critical to the world economy. Yet all to often companies use software development processes that were born when systems were coded in assembly language and computer hardware was more expensive than programmers' salaries.<\/p>\r\n<p>Today we have pervasive internet, omnipresent social media, big data, and massively scalable hardware. These advances have flourished largely outside the realm of traditional software development practices, and they call into question the conventional wisdom of what it means to develop, scale, and maintain excellent software-intensive systems.<\/p>\r\n<p>It's time to re-think our approach to software development processes, our perception of the people who create software, and our governance systems. This two day workshop presents an alternate framework for thinking about developing software-intensive systems - one based on Lean principles and focused on innovation.<\/p>\r\n<h2>Date<\/h2>\r\n<ul class=\"list\"><li>12-13 June 2014<\/li><\/ul>\r\n<h2>Location<\/h2>\r\n<ul class=\"list\"><li>Krakow, Poland<\/li><\/ul>\r\n<h2>Trainers<\/h2>\r\n<p><b>Mary Poppendieck<\/b> has been in the Information Technology industry for over thirty years. She has managed software development, supply chain management, manufacturing operations, and new product development. She spearheaded the implementation of a Just-in-Time system in a 3M video tape manufacturing plant and led new product development teams, commercializing products ranging from digital controllers to 3M Light Fiber™.<\/p>\r\n<p><b>Tom Poppendieck<\/b> has over 25 years of experience in computing including eight years of work with object technology.&nbsp;His modeling and mentoring skills are rooted in his experience as a physics professor.&nbsp;His early work was in IT infrastructure, product development, and manufacturing support, and evolved to consulting project assignments in healthcare, logistics, mortgage banking, and travel services. Tom holds a PhD in Physics and has taught physics for ten years.<\/p>\r\n<p>Mary and Tom have pioneered the application of Lean Thinking to software development and documented their principles in books: <a href=\"http://www.amazon.com/exec/obidos/ASIN/0321150783/poppendieckco-20\" target=\"_blank\" >Lean Software Development: An Agile Toolkit<\/a>, published in 2003, its sequel, <a href=\"http://www.amazon.com/exec/obidos/ASIN/0321437381/poppendieckco-20\" target=\"_blank\" >Implementing Lean Software Development: From Concept to Cash<\/a>, published in 2006, <a href=\"http://www.amazon.com/exec/obidos/ASIN/0321620704/poppendieckco-20\" target=\"_blank\" >Leading Lean Software Development: Results are Not the Point<\/a> in 2009, and <a href=\"http://www.amazon.com/exec/obidos/ASIN/0321896904/poppendieckco-20\" target=\"_blank\" >The Lean Mindset: Ask the Right Questions<\/a> in 2013.<\/p>\r\n<p>For the last several years they're helping companies around the world implementing Lean principles by providing lectures, training and coaching.<\/p>\r\n<h2>Price<\/h2><ul class=\"list\"><li>Early birds: 3000 PLN or 715 EUR net (till April 11, 2014)<\/li><li>Regular: 3400 PLN or 815 EUR net (till May 21, 2014)<\/li><li>Late booking: 3800 PLN or 915 EUR net (from May 22, 2014)<\/li><\/ul><p>Price includes:<\/p><ul class=\"list\"><li>Cost of two-day training led by two trainers<\/li><li>Training materials in electronic format <\/li><li>Lunches and coffee breaks<\/li><\/ul><p>Number of seats limited.<\/p>\r\n<h2>Content<\/h2>\r\n<ul class=\"list\"><li>Build the Right Thing<ul class=\"list\"><li>Beyond Requirements<\/li><li>The Roles of Engineering &amp; Design<\/li><li>Feedback: Lessons from Lean Startup<\/li><\/ul><\/li><li>Build the Thing Right<ul class=\"list\"><li>Learn to See Waste<\/li><li>Mistake-Proof the Process<\/li><li>Map the Value Stream<\/li><\/ul><\/li><li>Focus on Flow<ul class=\"list\"><li>Manage Workflow<\/li><li>Limit Work-in-Progress<\/li><li>Increase the Pace of Delivery<\/li><\/ul><\/li><li>Build the Right Organization<ul class=\"list\"><li>Motivation<\/li><li>Leadership Roles<\/li><li>Multi-Disciplined Teams<\/li><\/ul><\/li><li>Learn to Improve<ul class=\"list\"><li>Improvement Kata<\/li><li>The Coaching Role<\/li><li>Problem Solving<\/li><\/ul><\/li><\/ul><h2>Objectives<\/h2>\r\n<p>By attending this course you will learn:<\/p>\r\n<ul class=\"list\"><li>How to discover what customers really want.<\/li><li>Who should design/engineer solutions to customer problems.<\/li><li>How to look at your process from a customer's point of view and identify waste.<\/li><li>What's wrong with software testing and what you have to do to fix it.<\/li><li>What organizational structures are most likely to foster innovation.<\/li><li>Scheduling strategies that permit confident promise-dating and reliable delivery.<\/li><li>Tools for problem solving that everyone in the organization can use.<\/li><li>Leadership roles that work - from the perspective of followers.<\/li><\/ul>\r\n<h2>Intended audience<\/h2>\r\n<p>This course is intended for managers, leaders and all people involved in making decisions about how software-intensive products are developed.<\/p>\r\n<p>No special knowledge is required, however you will be asked to read short articles and watch videos on each topic prior to the workshop - come prepared for thoughtful discussion!<\/p>\r\n<h2>Duration<\/h2>\r\n<ul class=\"list\"><li>2 days (16h)<\/li><\/ul>\r\n<h2>Additional Information<\/h2>\r\n<p>Mary and Tom <a href=\"http://www.poppendieck.com/\" target=\"_blank\" >website<\/a> offers videos, podcasts and essays on Lean Software Development.<\/p>\r\n<h2>Registration<\/h2>\r\n<p>In order to register you can either fill in the <a href=\"http://procognita.com/training/public-training/registration-form/\" class=\"internal-link\">registration form<\/a>, send e-mail to <a href=\"mailto:register@procognita.com\">register(at)procognita.com<\/a>, or  call +48-606-136-296.<\/p><\/a>","priority":100,"room":{"class":"Room","id":1},"slidesLink":null,"speaker":{"class":"Speaker","id":4},"speaker2":{"class":"Speaker","id":13},"timeslot":{"class":"Timeslot","id":21},"topic":"Lean Software Development","type":"Training"}]